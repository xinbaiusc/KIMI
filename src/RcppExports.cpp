// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// countSeqFeatureCppSingle
List countSeqFeatureCppSingle(CharacterVector RseqDNA, int k);
RcppExport SEXP _KIMI_countSeqFeatureCppSingle(SEXP RseqDNASEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type RseqDNA(RseqDNASEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(countSeqFeatureCppSingle(RseqDNA, k));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP KIMI_countSeqFeatureCppSingle(SEXP, SEXP);

static const R_CallMethodDef CallEntries[] = {
    {"_KIMI_countSeqFeatureCppSingle", (DL_FUNC) &_KIMI_countSeqFeatureCppSingle, 2},
    {"KIMI_countSeqFeatureCppSingle", (DL_FUNC) &KIMI_countSeqFeatureCppSingle, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_KIMI(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
